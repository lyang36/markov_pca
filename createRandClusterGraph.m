function A = createRandClusterGraph(numClusters, numberPointsPerCluster)
    jones = ones(numberPointsPerCluster) - eye(numberPointsPerCluster);
    A = zeros(numClusters * numberPointsPerCluster);
    for j = 1:numClusters
       A(((j-1)*numberPointsPerCluster + 1):(j*numberPointsPerCluster), ...
           ((j-1)*numberPointsPerCluster + 1):(j*numberPointsPerCluster) ...
            ) ...
           = jones;
       %bridge the clusters
       if(j < numClusters)
            A(((j-1)*numberPointsPerCluster + 1):((j-1)*numberPointsPerCluster + numberPointsPerCluster / 2), ...
                (j*numberPointsPerCluster + 1):(j*numberPointsPerCluster + numberPointsPerCluster / 2)) ...
                    = eye(numberPointsPerCluster / 2);
            A((j*numberPointsPerCluster + 1):(j*numberPointsPerCluster + numberPointsPerCluster / 2), ...
                ((j-1)*numberPointsPerCluster + 1):((j-1)*numberPointsPerCluster + numberPointsPerCluster / 2)) ...
                    = eye(numberPointsPerCluster / 2);
                
            A(((j-1)*numberPointsPerCluster + numberPointsPerCluster/2 + 1):((j-1)*numberPointsPerCluster + numberPointsPerCluster), ...
                (j*numberPointsPerCluster + numberPointsPerCluster/2 + 1):(j*numberPointsPerCluster + numberPointsPerCluster)) ...
                    = eye(numberPointsPerCluster / 2);
            A((j*numberPointsPerCluster + numberPointsPerCluster/2 + 1):(j*numberPointsPerCluster + numberPointsPerCluster), ...
                ((j-1)*numberPointsPerCluster + numberPointsPerCluster/2 + 1):((j-1)*numberPointsPerCluster + numberPointsPerCluster)) ...
                    = eye(numberPointsPerCluster / 2);
%        else

       end
       %degrees = sum(A);
    end
    
    j0 = 1;
    j1 = numClusters;

    A(((j1-1)*numberPointsPerCluster + numberPointsPerCluster/2 + 1):((j1-1)*numberPointsPerCluster + numberPointsPerCluster), ...
        (numberPointsPerCluster / 2 + 1):(numberPointsPerCluster)) ...
            = eye(numberPointsPerCluster / 2);
    A((numberPointsPerCluster / 2 + 1):(numberPointsPerCluster), ...
        ((j1-1)*numberPointsPerCluster + numberPointsPerCluster/2 + 1):((j1-1)*numberPointsPerCluster + numberPointsPerCluster)) ...
            = eye(numberPointsPerCluster / 2);
end
